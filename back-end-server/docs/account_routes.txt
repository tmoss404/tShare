All account-related routes are prefixed with /account/ and follow-this-naming-convention-with-hyphens. Data validation is done by this server.
Also, all requests have the fields listed wrapped in an Object. All routes should return at least a message and a success status wrapped in an Object.



/account/register:

This route registers account information in the database. It takes two parameters inside an Object and returns an Object containing a message and success property.
If the email, password, or the request body is malformed, the request will be rejected and a success status of false is returned along with an error message:
- email: String
- password: String

Returns a message and a success status wrapped in an object:
{"message":"Created your account successfully.","success":true}

Example request:

var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
        console.log(this.response);
    }
};
xhttp.open("POST", "http://tshare-back-end.herokuapp.com/account/register", true);
xhttp.setRequestHeader("Content-Type", "application/json");  // Please note that the Content-Type must be application/json to be received properly. This goes for ALL routes.
xhttp.send(JSON.stringify({
    email: "eric.d.mcdonald@gmail.com",
    password: "myValidTestPwd!123"
}));


/account/logout:

This route will logout the user by adding their JWT token to the Invalid_Token table in the database. It takes the same parameter as check-login, which is one parameter: loginToken wrapped in an Object. This request will basically always return a status of success with a message, even if the login token is totally invalid:
- loginToken: String

Returns a message and a success status such as:
{"message":"Token has been invalidated successfully.","success":true}

Example request:

var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
        console.log(this.response);
    }
};
xhttp.open("POST", "http://tshare-back-end.herokuapp.com/account/logout", true);
xhttp.setRequestHeader("Content-Type", "application/json");
xhttp.send(JSON.stringify({
    loginToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50SWQiOjI4NCwiZW1haWwiOiJlcmljLmQubWNkb25hbGRAZ21haWwuY29tIiwiaWF0IjoxNjIzMDE2NjI3LCJleHAiOjE2MjMwMTY5Mjd9.gIXfYy3TKTgo5dWxbZdiomxsEwhiDfTlw52YZluG7gI"
}));


/account/login:

This route attempts to login a user using their email and password. It takes two parameters wrapped in an Object. If the email, password, or the Object itself is malformed, then the request will be rejected:
- email: String
- password: String

Returns a message, success status, and a login token (or null if the request was rejected):
{"message":"Logged in successfully.","success":true,"loginToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50SWQiOjI4NCwiZW1haWwiOiJlcmljLmQubWNkb25hbGRAZ21haWwuY29tIiwiaWF0IjoxNjIzMDE2NjI3LCJleHAiOjE2MjMwMTY5Mjd9.gIXfYy3TKTgo5dWxbZdiomxsEwhiDfTlw52YZluG7gI"}

Example request:

var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
        console.log(this.response);
    }
};
xhttp.open("POST", "http://tshare-back-end.herokuapp.com/account/login", true);
xhttp.setRequestHeader("Content-Type", "application/json");
xhttp.send(JSON.stringify({
    email: "eric.d.mcdonald@gmail.com",
    password: "myValidTestPwd123@",
}));


/account/check-login:

This route checks a user's login token for validity. It takes one parameter: loginToken wrapped in an Object. The loginToken returned is a JWT web token containing. For now, multiple sessions are allowed. If the login token is invalid, the request is considered rejected and a message with a success status of false is returned:
- loginToken: String
Decoded JWT token format:
{
    accountId: <number>,  // This corresponds with the actual primary key in the Account table.
    email: "<email>"
}

Returns a message and a success status wrapped in an Object:
{"message":"Your login token is still valid.","success":true}

Example request:

var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
        console.log(this.response);
    }
};
xhttp.open("POST", "http://tshare-back-end.herokuapp.com/account/check-login", true);
xhttp.setRequestHeader("Content-Type", "application/json");
xhttp.send(JSON.stringify({
    loginToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50SWQiOjI4NCwiZW1haWwiOiJlcmljLmQubWNkb25hbGRAZ21haWwuY29tIiwiaWF0IjoxNjIzMDE2NjI3LCJleHAiOjE2MjMwMTY5Mjd9.gIXfYy3TKTgo5dWxbZdiomxsEwhiDfTlw52YZluG7gI"
}));


/account/forgot-password:

This route is for a user to request a password change. It sends the user an email to the email address specified in the request object. It takes one parameter: email wrapped in an Object:
- email: String

Returns a message and a success status wrapped in an Object:
{"message":"A password reset email has been sent to eric.d.mcdonald@gmail.com","success":true}

Example request:

var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
	console.log(xhttp.responseText);
    }
};
xhttp.open("POST", "http://tshare-back-end.herokuapp.com/account/forgot-password", true);
xhttp.setRequestHeader("Content-Type", "application/json");
xhttp.send(JSON.stringify({
	email: "eric.d.mcdonald@gmail.com"
}));


/account/reset-password/:resetPwdId:

This route is for the INTERNAL link that is sent for a password reset email. Basically, the front-end should have a route like /reset-password/<id> that displays a password reset page that then connects to here.
It takes one parameter: newPassword wrapped in an Object, as well as the resetPwdId in the URL parameters. Please note that the newPassword parameter must follow the password conventions used in /models/account_util#isPasswordValid:
- newPassword: String

Returns a message and a success status wrapped in an Object:
{"message":"Your password has been reset successfully.","success":true}

Example request:

var xhttp = new XMLHttpRequest();
xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
	console.log(xhttp.responseText);
    }
};
xhttp.open("POST", "http://tshare-back-end.herokuapp.com/account/reset-password/38806", true);
xhttp.setRequestHeader("Content-Type", "application/json");
xhttp.send(JSON.stringify({
	newPassword: "myNewValidPassword123!"
}));
